{
 "Resources": {
  "myuniqueartifactory2FFA2882": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "my-unique-artifactory",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:daa88485",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/my-unique-artifactory/Resource"
   }
  },
  "myuniqueartifactoryPolicy387E2204": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "myuniqueartifactory2FFA2882"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "myuniqueartifactory2FFA2882",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "myuniqueartifactory2FFA2882",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/my-unique-artifactory/Policy/Resource"
   }
  },
  "myuniqueartifactoryAutoDeleteObjectsCustomResource29516FB0": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "myuniqueartifactory2FFA2882"
    }
   },
   "DependsOn": [
    "myuniqueartifactoryPolicy387E2204"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/my-unique-artifactory/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "64267bdade6530c78c99e1df05c9336e81c8dad82fdb06133ee90f7390f69d26.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "myuniqueartifactory2FFA2882"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.64267bdade6530c78c99e1df05c9336e81c8dad82fdb06133ee90f7390f69d26",
    "aws:asset:property": "Code"
   }
  },
  "DeployStaticWebsiteAwsCliLayer5F50C1DC": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/DeployStaticWebsite/AwsCliLayer/Resource",
    "aws:asset:path": "asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployStaticWebsiteCustomResource59272C1A": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "3477e24846537002b2ba483ac2ddf12618d1fb9728bca9a58ccba53501822160.zip"
    ],
    "DestinationBucketName": {
     "Ref": "myuniqueartifactory2FFA2882"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/DeployStaticWebsite/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "myuniqueartifactory2FFA2882",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "myuniqueartifactory2FFA2882",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployStaticWebsiteAwsCliLayer5F50C1DC"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstanceVpc678D242B": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/Resource"
   }
  },
  "InstanceVpcPublicSubnet1Subnet83FE0136": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/Subnet"
   }
  },
  "InstanceVpcPublicSubnet1RouteTable19B4FFDE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/RouteTable"
   }
  },
  "InstanceVpcPublicSubnet1RouteTableAssociation568CFF48": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet1RouteTable19B4FFDE"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "InstanceVpcPublicSubnet1DefaultRoute81EE6841": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet1RouteTable19B4FFDE"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "DependsOn": [
    "InstanceVpcVPCGWB9068B2B"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "InstanceVpcPublicSubnet1EIPC723E037": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/EIP"
   }
  },
  "InstanceVpcPublicSubnet1NATGateway89A15196": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "InstanceVpcPublicSubnet1EIPC723E037",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "InstanceVpcPublicSubnet1DefaultRoute81EE6841",
    "InstanceVpcPublicSubnet1RouteTableAssociation568CFF48"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet1/NATGateway"
   }
  },
  "InstanceVpcPublicSubnet2SubnetE496164F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/Subnet"
   }
  },
  "InstanceVpcPublicSubnet2RouteTable9577B455": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/RouteTable"
   }
  },
  "InstanceVpcPublicSubnet2RouteTableAssociation4771AA74": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet2RouteTable9577B455"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet2SubnetE496164F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "InstanceVpcPublicSubnet2DefaultRoute46AEB0D2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet2RouteTable9577B455"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "DependsOn": [
    "InstanceVpcVPCGWB9068B2B"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "InstanceVpcPublicSubnet2EIPADEE0678": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/EIP"
   }
  },
  "InstanceVpcPublicSubnet2NATGateway340C143C": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet2SubnetE496164F"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "InstanceVpcPublicSubnet2EIPADEE0678",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "InstanceVpcPublicSubnet2DefaultRoute46AEB0D2",
    "InstanceVpcPublicSubnet2RouteTableAssociation4771AA74"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PublicSubnet2/NATGateway"
   }
  },
  "InstanceVpcPrivateSubnet1Subnet46C04CD6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet1/Subnet"
   }
  },
  "InstanceVpcPrivateSubnet1RouteTable7CECA589": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet1/RouteTable"
   }
  },
  "InstanceVpcPrivateSubnet1RouteTableAssociation39D10F7C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet1RouteTable7CECA589"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPrivateSubnet1Subnet46C04CD6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "InstanceVpcPrivateSubnet1DefaultRouteAB784E20": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet1RouteTable7CECA589"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "InstanceVpcPublicSubnet1NATGateway89A15196"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "InstanceVpcPrivateSubnet2Subnet8DCB4F6A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet2/Subnet"
   }
  },
  "InstanceVpcPrivateSubnet2RouteTable9EC69C41": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet2/RouteTable"
   }
  },
  "InstanceVpcPrivateSubnet2RouteTableAssociation3F2555A1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet2RouteTable9EC69C41"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPrivateSubnet2Subnet8DCB4F6A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "InstanceVpcPrivateSubnet2DefaultRouteB47A15C6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet2RouteTable9EC69C41"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "InstanceVpcPublicSubnet2NATGateway340C143C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "InstanceVpcIGWC128D36F": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/InstanceVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/IGW"
   }
  },
  "InstanceVpcVPCGWB9068B2B": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "InternetGatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/VPCGW"
   }
  },
  "InstanceVpcRestrictDefaultSecurityGroupCustomResource03FB4290": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "InstanceVpc678D242B",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "InstanceVpc678D242B",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386",
    "aws:asset:property": "Code"
   }
  },
  "InstanceSecurityGroup896E10BF": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "SimpleDeployStack/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH access and http access",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow access on port 8000",
      "FromPort": 8000,
      "IpProtocol": "tcp",
      "ToPort": 8000
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow access on port 80 http traffic",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceSecurityGroup/Resource"
   }
  },
  "InstanceRole3CCE2F1D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/InstanceRole/Resource"
   }
  },
  "AppInstanceInstanceProfileC6B6EFAA": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "InstanceRole3CCE2F1D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/AppInstance/InstanceProfile"
   }
  },
  "AppInstance13C82D50": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "AppInstanceInstanceProfileC6B6EFAA"
    },
    "ImageId": {
     "Fn::FindInMap": [
      "AppInstanceAmiMapCE8EFE75",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "InstanceSecurityGroup896E10BF",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SimpleDeployStack/AppInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n\n                #!/bin/bash\n                sudo apt update -y\n                sudo apt install python3 -y\n                sudo apt install python3-pip -y\n                pip install django==3.2 \n                pip install django-widget-tweaks\n                pip install pillow\n                sudo apt install unzip -y \n                curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\n                unzip awscliv2.zip\n                sudo ./aws/install\n                mkdir app\n                cd app\n                aws s3 cp s3://my-unique-artifactory/ . --recursive\n                python3 manage.py runserver 0.0.0.0:8000\n                "
    }
   },
   "DependsOn": [
    "InstanceRole3CCE2F1D"
   ],
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/AppInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VSTW/CMAz9LdxDNoG0jyN0G0LapqqduFZpaiAjTarEAVVV//uSptBxes/Prmv7ZUFfnujjjF3snFenuRQl7XJk/ES8VHR2Sbu14ydAkuzVyCKkWgreTvIYx2DNLPTELouugkbqtgaFNKbebgJh1gJaugrQE8nqsmK08x0/WQtmB8YKrUgu1EECavXhFMeg3IgvvfKeCFbTLtMSgjzgNOLEtsoiUxxSo/dC+iGBL2i3a3hI7tKEpK70tbkrVVx6Ypl2CD+sjH+I+qT5LTQX7DrXkAjkfZsG+Ga4YQgX1pLUiLOnU+OtQjCeXwviJGO0Qm/HcbhXDtwZge3GaNcMM9wJ19X+r9n3JHEWdZ2B1c7E5MTvUv4kZ1GBIYMh/hUc/OVHWwoZLCn8o+BS0NXFJlIMLpH/jb9Y04RvPE20qkQ0Jm3xqNXDkj7T19mvFWJunEJRA80i/gG4oP4lhQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "SimpleDeployStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "AppInstanceAmiMapCE8EFE75": {
   "ap-south-1": {
    "ami": "ami-08e5424edfe926b43"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}